<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Prologue on</title><link>https://go-goim.github.io/docs/prologue/</link><description>Recent content in Prologue on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="https://go-goim.github.io/docs/prologue/index.xml" rel="self" type="application/rss+xml"/><item><title>Quick Start</title><link>https://go-goim.github.io/docs/prologue/quick-start/</link><pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate><guid>https://go-goim.github.io/docs/prologue/quick-start/</guid><description>run # 1# run msg service 2$ make run Srv=msg 3# run gateway service 4$ make run Srv=gateway 5# run push service 6$ make run Srv=push other make command # 1make help 2 3Usage: 4 make &amp;lt;target&amp;gt; 5 6Development 7 vet Run go vet against code. 8 lint Run go lint against code. 9 test Run test against code. 10 11Generate 12 protoc Run protoc command to generate pb code. 13 14Build 15 build build provided server 16 build-all build all apps 17 18Docker 19 docker-build build docker image 20 21Run 22 run run provided server 23 24General 25 help Display this help.</description></item><item><title>Introduction</title><link>https://go-goim.github.io/docs/prologue/introduction/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://go-goim.github.io/docs/prologue/introduction/</guid><description>How to run # 1# run push server 2make run Srv=push 3# run gateway server 4make run Srv=gateway 5# run msg server 6make run Srv=msg Design of GoIM # 整体能力规划 # 客户端如何查找和连接长连接服务 # 客户端如何连接长连接服务，目前我有两个方案各有优缺点，但是还没确定。
反向代理方案 # 客户端统一入口在 gateway 上，gateway 支持反向代理能力，客户端发起长连接请求时，代理到后端的服务（这里准备使用一致性哈希来确定转发到哪台机器上）
优点:
入口统一，且可以在 gateway 上完成鉴权等操作 后端服务无需暴露 ip，且可任意扩缩容比较安全 缺点：
gateway 需要承受长连接带来的压力，需要更多的 gateway 来承受大量在线用户的情况 httpdns 方案 # 客户端先通过暴露的域名，去访问 httpdns 服务获取真正后端服务的 ip，然后通过 ip 直接进行长连接
优点：
客户端与长连接服务器直连，减少代理层的压力 缺点：</description></item><item><title>Configuration</title><link>https://go-goim.github.io/docs/prologue/configuration/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://go-goim.github.io/docs/prologue/configuration/</guid><description>配置为两份文件分别为 service config 和 registry config
service config 关注服务启停以及声明周期中需要的各类配置 registry config 关注服务注册相关配置 server config definition # 1// Service 为一个服务的全部配置 2message Service {3 string name = 1;4 string version = 2;5 optional Server http = 3;6 optional Server grpc = 4;7 Log log = 5;8 map&amp;lt;string, string&amp;gt; metadata = 6;9 Redis redis = 7;10 MQ mq = 8;11}1213message Server {14 string scheme = 1;15 string addr = 2;16 int32 port = 3;17}181920enum Level {21 DEBUG = 0;22 INFO = 1;23 WARING = 2;24 ERROR = 3;25 FATAL = 4;26}2728message Log {29 optional string log_path = 1;30 repeated Level level = 2;31}3233message Redis {34 string addr = 1;35 string password = 2;36 int32 max_conns = 3;37 int32 min_idle_conns = 4;38 google.</description></item></channel></rss>